services:
  countries_app:
    tty: true
    image: countriesapp
    build:
      context: ./countries-app
      dockerfile: Dockerfile.dev
    command: npm run start
    volumes:
      - ./countries-app:/usr/src/app
    ports:
      - 3001:3000
    depends_on:
      - countries_api
    networks:
      - my_network

  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    env_file:
      - ./countries-api/.env/database
    networks:
      - my_network
    ports:
      - 5432:5432

  elasticsearch:
    image: elasticsearch:8.11.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - my_network

  countries_api:
    container_name: countries_api
    build:
      context: ./countries-api
      dockerfile: Dockerfile.dev
    working_dir: /usr/src/app
    command: sh -c "rm -f tmp/pids/server.pid &&
      bundle exec rails db:create &&
      bundle exec rails db:migrate &&
      bundle exec rails s -p 3000 -b '0.0.0.0'"
    env_file:
      - ./countries-api/.env/database
      - ./countries-api/.env/app
    volumes:
      - ./countries-api:/usr/src/app
      - ./countries-api/tmp/gem_cache:/gems
    ports:
      - "3000:3000"
    networks:
      - my_network
    depends_on:
      - db
      - elasticsearch

volumes:
  gem_cache:

networks:
  my_network:
    driver: bridge